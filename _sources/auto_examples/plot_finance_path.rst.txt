

.. _sphx_glr_auto_examples_plot_finance_path.py:


=======================================================
Lasso path computation on Finance/log1p dataset
=======================================================

The example runs the Celer algorithm on sparse data.




.. image:: /auto_examples/images/sphx_glr_plot_finance_path_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Warning: this example may take more than 10 minutes to run
    Loading data...
    Warning: downloading and preprocessing the Finance dataset.
    This may take several minutes
    Downloading data from https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/regression/log1p.E2006.train.bz2 (234.3 MB)

    Successfully downloaded file to ./data/log1p.E2006.train.bz2
    Starting path computation...
    Early exit, gap: 6.94e-03 < 1.00e-02
    Early exit, gap: 6.01e-06 < 1.00e-02
    Early exit, gap: 3.21e-03 < 1.00e-02
    Early exit, gap: 2.85e-03 < 1.00e-02
    Early exit, gap: 4.18e-03 < 1.00e-02
    Early exit, gap: 3.34e-05 < 1.00e-02
    Early exit, gap: 9.40e-03 < 1.00e-02
    Early exit, gap: 3.52e-05 < 1.00e-02
    Early exit, gap: 6.00e-03 < 1.00e-02
    Early exit, gap: 5.38e-08 < 1.00e-04
    Early exit, gap: 3.32e-07 < 1.00e-04
    Early exit, gap: 3.50e-06 < 1.00e-04
    Early exit, gap: 1.96e-07 < 1.00e-04
    Early exit, gap: 4.76e-06 < 1.00e-04
    Early exit, gap: 6.19e-07 < 1.00e-04
    Early exit, gap: 3.63e-05 < 1.00e-04
    Early exit, gap: 4.74e-05 < 1.00e-04
    Early exit, gap: 6.45e-05 < 1.00e-04
    Early exit, gap: 4.46e-08 < 1.00e-06
    Early exit, gap: 3.32e-07 < 1.00e-06
    Early exit, gap: 2.40e-07 < 1.00e-06
    Early exit, gap: 7.31e-07 < 1.00e-06
    Early exit, gap: 3.02e-07 < 1.00e-06
    Early exit, gap: 5.80e-07 < 1.00e-06
    Early exit, gap: 4.21e-07 < 1.00e-06
    Early exit, gap: 2.55e-07 < 1.00e-06
    Early exit, gap: 2.87e-07 < 1.00e-06




|


.. code-block:: python

    import time

    import numpy as np
    import matplotlib.pyplot as plt


    from scipy import sparse

    from celer import celer_path
    from celer.examples_utils import download_preprocess_finance
    from celer.plot_utils import plot_path_hist

    print(__doc__)

    print("Warning: this example may take more than 10 minutes to run")
    print("Loading data...")
    try:
        X = sparse.load_npz("./data/finance_data_preprocessed.npz")
        y = np.load("./data/finance_target_preprocessed.npy")
    except FileNotFoundError:
        print("Warning: downloading and preprocessing the Finance dataset.")
        print("This may take several minutes")
        download_preprocess_finance()
        X = sparse.load_npz("./data/finance_data_preprocessed.npz")
        y = np.load("./data/finance_target_preprocessed.npy")

    print("Starting path computation...")
    alpha_max = np.max(np.abs(X.T.dot(y)))

    # construct fine or coarse grid of regularization parameters
    fine = False
    n_alphas = 100 if fine else 10
    alphas = alpha_max * np.logspace(0, -2, n_alphas)

    gap_freq = 10
    prune = 1
    verbose = 0
    verbose_inner = 0

    tols = [1e-2, 1e-4, 1e-6]
    results = np.zeros([1, len(tols)])
    for tol_ix, tol in enumerate(tols):
        t0 = time.time()
        res = celer_path(X, y, alphas, max_iter=100, gap_freq=gap_freq,
                         max_epochs_inner=50000, p0=100, verbose=verbose,
                         verbose_inner=verbose_inner,
                         tol=tol, prune=prune)
        results[0, tol_ix] = time.time() - t0
        betas, thetas, gaps = res

    labels = [r"\sc{CELER}"]
    figsize = (7, 4)
    fig = plot_path_hist(results, labels, tols, figsize, ylim=None)
    plt.show()

**Total running time of the script:** ( 9 minutes  47.754 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_finance_path.py <plot_finance_path.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_finance_path.ipynb <plot_finance_path.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
