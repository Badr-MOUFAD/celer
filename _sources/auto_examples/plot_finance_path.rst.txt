.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_finance_path.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_finance_path.py:


=======================================================
Lasso path computation on Finance/log1p dataset
=======================================================

The example runs the Celer algorithm on the Finance dataset
which is a large sparse dataset.

Running time is not compared with the scikit-learn
implementation as it makes the example too long to run.


.. code-block:: default


    import time

    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    from libsvmdata import fetch_libsvm

    from celer import celer_path

    print(__doc__)

    print("*** Warning: this example may take more than 5 minutes to run ***")
    X, y = fetch_libsvm('finance')
    n_samples, n_features = X.shape
    alpha_max = np.max(np.abs(X.T.dot(y))) / n_samples
    print("Dataset size: %d samples, %d features" % X.shape)

    # construct grid of regularization parameters alpha
    n_alphas = 11
    alphas = alpha_max * np.geomspace(1, 0.05, n_alphas)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    *** Warning: this example may take more than 5 minutes to run ***
    Dataset: finance
    Dataset size: 16087 samples, 1668737 features




Run Celer on a grid of regularization parameters, for various tolerances:


.. code-block:: default

    tols = [1e-2, 1e-4, 1e-6]
    results = np.zeros([1, len(tols)])
    gaps = np.zeros((len(tols), len(alphas)))

    print("Starting path computation...")
    for tol_ix, tol in enumerate(tols):
        t0 = time.time()
        res = celer_path(X, y, 'lasso', alphas=alphas,
                         tol=tol, prune=True, verbose=1)
        results[0, tol_ix] = time.time() - t0
        _, coefs, gaps[tol_ix] = res


    labels = [r"\sc{Celer}"]
    figsize = (7, 4)

    df = pd.DataFrame(results.T, columns=["Celer"])
    df.index = tols
    df.plot.bar(rot=0)
    plt.xlabel("stopping tolerance")
    plt.ylabel("path computation time (s)")
    plt.tight_layout()
    plt.show(block=False)




.. image:: /auto_examples/images/sphx_glr_plot_finance_path_001.png
    :alt: plot finance path
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Starting path computation...
    ##########################
    ##### Computing alpha 1/11
    ##########################
    Iter 0: primal 6.3741726822, gap 1.78e-15
    Early exit, gap: 1.78e-15 < 1.00e-02
    ##########################
    ##### Computing alpha 2/11
    ##########################
    Iter 0: primal 6.3741726822, gap 4.27e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.9613304088, gap -2.66e-15
    Early exit, gap: -2.66e-15 < 1.00e-02
    ##########################
    ##### Computing alpha 3/11
    ##########################
    Iter 0: primal 5.3493871472, gap 2.41e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.1226210312, gap 3.55e-15
    Early exit, gap: 3.55e-15 < 1.00e-02
    ##########################
    ##### Computing alpha 4/11
    ##########################
    Iter 0: primal 4.3329604381, gap 1.39e-01, 1 feats in subpb (10 left)
    Iter 1: primal 4.2084022843, gap 1.33e-14
    Early exit, gap: 1.33e-14 < 1.00e-02
    ##########################
    ##### Computing alpha 5/11
    ##########################
    Iter 0: primal 3.4385289382, gap 8.27e-02, 1 feats in subpb (10 left)
    Iter 1: primal 3.3701116016, gap 4.17e-14
    Early exit, gap: 4.17e-14 < 1.00e-02
    ##########################
    ##### Computing alpha 6/11
    ##########################
    Iter 0: primal 2.6981190533, gap 5.19e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.6605387601, gap 3.64e-14
    Early exit, gap: 3.64e-14 < 1.00e-02
    ##########################
    ##### Computing alpha 7/11
    ##########################
    Iter 0: primal 2.1067978332, gap 3.49e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.0861557195, gap 1.24e-14
    Early exit, gap: 1.24e-14 < 1.00e-02
    ##########################
    ##### Computing alpha 8/11
    ##########################
    Iter 0: primal 1.6451620796, gap 2.56e-02, 1 feats in subpb (11 left)
    Iter 1: primal 1.6338237738, gap -4.04e-14
    Early exit, gap: -4.04e-14 < 1.00e-02
    ##########################
    ##### Computing alpha 9/11
    ##########################
    Iter 0: primal 1.2901817774, gap 2.05e-02, 1 feats in subpb (20 left)
    Iter 1: primal 1.2839538697, gap 4.48e-03
    Early exit, gap: 4.48e-03 < 1.00e-02
    ###########################
    ##### Computing alpha 10/11
    ###########################
    Iter 0: primal 1.0200375141, gap 2.15e-02, 1 feats in subpb (33 left)
    Iter 1: primal 1.0166166473, gap 8.14e-03
    Early exit, gap: 8.14e-03 < 1.00e-02
    ###########################
    ##### Computing alpha 11/11
    ###########################
    Iter 0: primal 0.8159485000, gap 2.32e-02, 1 feats in subpb (65 left)
    Iter 1: primal 0.8140694853, gap 1.09e-02, 2 feats in subpb (26 left)
    Iter 2: primal 0.8130848375, gap 1.17e-04
    Early exit, gap: 1.17e-04 < 1.00e-02
    ##########################
    ##### Computing alpha 1/11
    ##########################
    Iter 0: primal 6.3741726822, gap 1.78e-15
    Early exit, gap: 1.78e-15 < 1.00e-04
    ##########################
    ##### Computing alpha 2/11
    ##########################
    Iter 0: primal 6.3741726822, gap 4.27e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.9613304088, gap -2.66e-15
    Early exit, gap: -2.66e-15 < 1.00e-04
    ##########################
    ##### Computing alpha 3/11
    ##########################
    Iter 0: primal 5.3493871472, gap 2.41e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.1226210312, gap 3.55e-15
    Early exit, gap: 3.55e-15 < 1.00e-04
    ##########################
    ##### Computing alpha 4/11
    ##########################
    Iter 0: primal 4.3329604381, gap 1.39e-01, 1 feats in subpb (10 left)
    Iter 1: primal 4.2084022843, gap 1.33e-14
    Early exit, gap: 1.33e-14 < 1.00e-04
    ##########################
    ##### Computing alpha 5/11
    ##########################
    Iter 0: primal 3.4385289382, gap 8.27e-02, 1 feats in subpb (10 left)
    Iter 1: primal 3.3701116016, gap 4.17e-14
    Early exit, gap: 4.17e-14 < 1.00e-04
    ##########################
    ##### Computing alpha 6/11
    ##########################
    Iter 0: primal 2.6981190533, gap 5.19e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.6605387601, gap 3.64e-14
    Early exit, gap: 3.64e-14 < 1.00e-04
    ##########################
    ##### Computing alpha 7/11
    ##########################
    Iter 0: primal 2.1067978332, gap 3.49e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.0861557195, gap 1.24e-14
    Early exit, gap: 1.24e-14 < 1.00e-04
    ##########################
    ##### Computing alpha 8/11
    ##########################
    Iter 0: primal 1.6451620796, gap 2.56e-02, 1 feats in subpb (11 left)
    Iter 1: primal 1.6338237738, gap -4.04e-14
    Early exit, gap: -4.04e-14 < 1.00e-04
    ##########################
    ##### Computing alpha 9/11
    ##########################
    Iter 0: primal 1.2901817774, gap 2.05e-02, 1 feats in subpb (20 left)
    Iter 1: primal 1.2839538697, gap 4.48e-03, 2 feats in subpb (7 left)
    Iter 2: primal 1.2837737420, gap 1.32e-03, 4 feats in subpb (6 left)
    Iter 3: primal 1.2837565034, gap 3.96e-04, 3 feats in subpb (3 left)
    Iter 4: primal 1.2837548366, gap 1.17e-04, 2 feats in subpb (2 left)
    Iter 5: primal 1.2837546925, gap 3.43e-05
    Early exit, gap: 3.43e-05 < 1.00e-04
    ###########################
    ##### Computing alpha 10/11
    ###########################
    Iter 0: primal 1.0195306857, gap 1.77e-02, 2 feats in subpb (25 left)
    Iter 1: primal 1.0160994459, gap 3.18e-03, 4 feats in subpb (7 left)
    Iter 2: primal 1.0159988690, gap 9.26e-04, 4 feats in subpb (6 left)
    Iter 3: primal 1.0159891398, gap 2.67e-04, 3 feats in subpb (3 left)
    Iter 4: primal 1.0159883039, gap 7.90e-05
    Early exit, gap: 7.90e-05 < 1.00e-04
    ###########################
    ##### Computing alpha 11/11
    ###########################
    Iter 0: primal 0.8149159087, gap 1.61e-02, 2 feats in subpb (42 left)
    Iter 1: primal 0.8130321038, gap 2.29e-03, 4 feats in subpb (10 left)
    Iter 2: primal 0.8129741788, gap 6.80e-04, 4 feats in subpb (6 left)
    Iter 3: primal 0.8129686098, gap 1.95e-04, 3 feats in subpb (3 left)
    Iter 4: primal 0.8129681286, gap 5.78e-05
    Early exit, gap: 5.78e-05 < 1.00e-04
    ##########################
    ##### Computing alpha 1/11
    ##########################
    Iter 0: primal 6.3741726822, gap 1.78e-15
    Early exit, gap: 1.78e-15 < 1.00e-06
    ##########################
    ##### Computing alpha 2/11
    ##########################
    Iter 0: primal 6.3741726822, gap 4.27e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.9613304088, gap -2.66e-15
    Early exit, gap: -2.66e-15 < 1.00e-06
    ##########################
    ##### Computing alpha 3/11
    ##########################
    Iter 0: primal 5.3493871472, gap 2.41e-01, 1 feats in subpb (10 left)
    Iter 1: primal 5.1226210312, gap 3.55e-15
    Early exit, gap: 3.55e-15 < 1.00e-06
    ##########################
    ##### Computing alpha 4/11
    ##########################
    Iter 0: primal 4.3329604381, gap 1.39e-01, 1 feats in subpb (10 left)
    Iter 1: primal 4.2084022843, gap 1.33e-14
    Early exit, gap: 1.33e-14 < 1.00e-06
    ##########################
    ##### Computing alpha 5/11
    ##########################
    Iter 0: primal 3.4385289382, gap 8.27e-02, 1 feats in subpb (10 left)
    Iter 1: primal 3.3701116016, gap 4.17e-14
    Early exit, gap: 4.17e-14 < 1.00e-06
    ##########################
    ##### Computing alpha 6/11
    ##########################
    Iter 0: primal 2.6981190533, gap 5.19e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.6605387601, gap 3.64e-14
    Early exit, gap: 3.64e-14 < 1.00e-06
    ##########################
    ##### Computing alpha 7/11
    ##########################
    Iter 0: primal 2.1067978332, gap 3.49e-02, 1 feats in subpb (10 left)
    Iter 1: primal 2.0861557195, gap 1.24e-14
    Early exit, gap: 1.24e-14 < 1.00e-06
    ##########################
    ##### Computing alpha 8/11
    ##########################
    Iter 0: primal 1.6451620796, gap 2.56e-02, 1 feats in subpb (11 left)
    Iter 1: primal 1.6338237738, gap -4.04e-14
    Early exit, gap: -4.04e-14 < 1.00e-06
    ##########################
    ##### Computing alpha 9/11
    ##########################
    Iter 0: primal 1.2901817774, gap 2.05e-02, 1 feats in subpb (20 left)
    Iter 1: primal 1.2839538697, gap 4.48e-03, 2 feats in subpb (7 left)
    Iter 2: primal 1.2837737420, gap 1.32e-03, 4 feats in subpb (6 left)
    Iter 3: primal 1.2837565034, gap 3.96e-04, 3 feats in subpb (3 left)
    Iter 4: primal 1.2837548366, gap 1.17e-04, 2 feats in subpb (2 left)
    Iter 5: primal 1.2837546925, gap 3.43e-05, 2 feats in subpb (2 left)
    Iter 6: primal 1.2837546801, gap 1.00e-05, 2 feats in subpb (2 left)
    Iter 7: primal 1.2837546791, gap 2.94e-06, 2 feats in subpb (2 left)
    Iter 8: primal 1.2837546790, gap 8.63e-07
    Early exit, gap: 8.63e-07 < 1.00e-06
    ###########################
    ##### Computing alpha 10/11
    ###########################
    Iter 0: primal 1.0195291403, gap 1.76e-02, 2 feats in subpb (25 left)
    Iter 1: primal 1.0160971835, gap 3.15e-03, 4 feats in subpb (7 left)
    Iter 2: primal 1.0159986525, gap 9.16e-04, 4 feats in subpb (6 left)
    Iter 3: primal 1.0159891212, gap 2.64e-04, 3 feats in subpb (3 left)
    Iter 4: primal 1.0159883023, gap 7.82e-05, 2 feats in subpb (2 left)
    Iter 5: primal 1.0159882315, gap 2.29e-05, 2 feats in subpb (2 left)
    Iter 6: primal 1.0159882254, gap 6.71e-06, 2 feats in subpb (2 left)
    Iter 7: primal 1.0159882249, gap 1.97e-06, 2 feats in subpb (2 left)
    Iter 8: primal 1.0159882249, gap 2.41e-11
    Early exit, gap: 2.41e-11 < 1.00e-06
    ###########################
    ##### Computing alpha 11/11
    ###########################
    Iter 0: primal 0.8149130654, gap 1.60e-02, 2 feats in subpb (41 left)
    Iter 1: primal 0.8130279721, gap 2.21e-03, 4 feats in subpb (10 left)
    Iter 2: primal 0.8129737854, gap 6.57e-04, 4 feats in subpb (6 left)
    Iter 3: primal 0.8129685758, gap 1.89e-04, 3 feats in subpb (3 left)
    Iter 4: primal 0.8129681257, gap 5.59e-05, 2 feats in subpb (2 left)
    Iter 5: primal 0.8129680868, gap 1.64e-05, 2 feats in subpb (2 left)
    Iter 6: primal 0.8129680834, gap 4.80e-06, 2 feats in subpb (2 left)
    Iter 7: primal 0.8129680832, gap 1.41e-06, 2 feats in subpb (2 left)
    Iter 8: primal 0.8129680831, gap 4.12e-07
    Early exit, gap: 4.12e-07 < 1.00e-06




Measure the influence of regularization on the sparsity of the solutions:


.. code-block:: default


    fig, ax = plt.subplots(figsize=(8, 5), constrained_layout=True)
    plt.bar(np.arange(n_alphas), (coefs != 0).sum(axis=0))
    plt.title("Sparsity of solution along regularization path")
    ax.set_ylabel(r"$||\hat w||_0$")
    ax.set_xlabel(r"$\lambda / \lambda_{\mathrm{max}}$")
    ax.set_yscale('log')
    ax.set_xticks(np.arange(n_alphas)[::2])
    ax.set_xticklabels(map(lambda x: "%.2f" % x, alphas[::2] / alphas[0]))
    plt.show(block=False)





.. image:: /auto_examples/images/sphx_glr_plot_finance_path_002.png
    :alt: Sparsity of solution along regularization path
    :class: sphx-glr-single-img





Check convergence guarantees: gap is inferior to tolerance


.. code-block:: default


    df = pd.DataFrame(gaps.T, columns=map(lambda x: r"tol=%.0e" % x, tols))
    df.index = map(lambda x: "%.2f" % x, alphas / alphas[0])
    ax = df.plot.bar(figsize=(12, 5))
    ax.set_ylabel("duality gap reached")
    ax.set_xlabel(r"$\lambda / \lambda_{\mathrm{max}}$")
    ax.set_yscale('log')
    ax.set_yticks(tols)
    plt.tight_layout()
    plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_finance_path_003.png
    :alt: plot finance path
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  28.903 seconds)


.. _sphx_glr_download_auto_examples_plot_finance_path.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_finance_path.py <plot_finance_path.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_finance_path.ipynb <plot_finance_path.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
