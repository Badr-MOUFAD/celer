.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_lasso_cv.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_lasso_cv.py:


=======================================================
Run LassoCV for cross-validation on Leukemia dataset
=======================================================

The example runs the LassoCV scikit-learn like estimator
using the Celer algorithm.



.. image:: /auto_examples/images/sphx_glr_plot_lasso_cv_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Loading data...
    /home/mathurin/workspace/celer/celer/homotopy.py:242: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Fitting data with very small alpha may cause precision problems.
      ConvergenceWarning)
    Estimated regularization parameter alpha: 81.38126193253959
    /home/mathurin/workspace/celer/examples/plot_lasso_cv.py:45: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()





|


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from sklearn.datasets import fetch_openml

    from celer import LassoCV

    print(__doc__)

    print("Loading data...")
    dataset = fetch_openml("leukemia")
    X = np.asfortranarray(dataset.data.astype(float))
    y = 2 * ((dataset.target == "AML") - 0.5)
    n_samples = len(y)

    model = LassoCV(cv=3)
    model.fit(X, y)

    print("Estimated regularization parameter alpha: %s" % model.alpha_)

    # Display results
    m_log_alphas = -np.log10(model.alphas_)

    plt.figure()
    plt.plot(m_log_alphas, model.mse_path_, ':')
    plt.plot(m_log_alphas, model.mse_path_.mean(axis=-1), 'k',
             label='Average across the folds', linewidth=2)
    plt.axvline(-np.log10(model.alpha_), linestyle='--', color='k',
                label='alpha: CV estimate')

    plt.legend()

    plt.xlabel('-log(alpha)')
    plt.ylabel('Mean square error')
    plt.axis('tight')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.917 seconds)


.. _sphx_glr_download_auto_examples_plot_lasso_cv.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_lasso_cv.py <plot_lasso_cv.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_lasso_cv.ipynb <plot_lasso_cv.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
